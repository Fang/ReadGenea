data = read.bin("C:/Users/zhou/Data/weekandstart__011661_2012-03-22 12-20-15.bin", calibrate=T, start = 0.1,end = 0.4, blocksize=5000)
library(ReadGenea)
data = read.bin("C:/Users/zhou/Data/weekandstart__011661_2012-03-22 12-20-15.bin", calibrate=T, start = 0.1,end = 0.4, blocksize=5000)
beg = "5:00"
end = "16:20"
obj2 = stft.mv(data, beg, end, svm = F, win = 3000)
positionals(data, beg, end, filter=0)
res = NULL
for (thresh in 1:20 / 2){
res = rbind(res, cbind(thresh, log(rowSums(obj2$va[,obj2$freq > thresh]^2)), log(rowSums(obj2$va[,obj2$freq < thresh]^2))))
}
colnames(res) = c("thresh", "greater", "less")
tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); plot3d(res[,1] , log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]  ,col=ind , size=7)
library(rgl)
tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); plot3d(res[,1] , log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]  ,col=ind , size=7)
ind = rep(1, length(obj2$times))
tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); plot3d(res[,1] , log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]  ,col=ind , size=7)
tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); plot3d(res[,1] , log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]  ,col=ind , size=7)
tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); plot3d(res[,1] , log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]  ,col=ind , size=7)
tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); plot3d(res[,1] , log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]  ,col=ind , size=7)
tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 0 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); plot3d(res[,1] , log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]  ,col=ind , size=7)
tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); plot3d(res[,1] , log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]  ,col=ind , size=7)
beg = "5:00"
end = "5:20"
obj2 = stft.mv(data, beg, end, svm = F, win = 3000)
positionals(data, beg, end, filter=0)
res = NULL
for (thresh in 1:20 / 2){
res = rbind(res, cbind(thresh, log(rowSums(obj2$va[,obj2$freq > thresh]^2)), log(rowSums(obj2$va[,obj2$freq < thresh]^2))))
}
colnames(res) = c("thresh", "greater", "less")
tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); plot3d(res[,1] , log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]  ,col=ind , size=7)
beg = "5:00"
end = "6:20"
obj2 = stft.mv(data, beg, end, svm = F, win = 3000)
positionals(data, beg, end, filter=0)
res = NULL
for (thresh in 1:20 / 2){
res = rbind(res, cbind(thresh, log(rowSums(obj2$va[,obj2$freq > thresh]^2)), log(rowSums(obj2$va[,obj2$freq < thresh]^2))))
}
colnames(res) = c("thresh", "greater", "less")
tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); plot3d(res[,1] , log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]  ,col=ind , size=7)
ind = rep(1, length(obj2$times))
beg = "5:00"
end = "6:20"
obj2 = stft.mv(data, beg, end, svm = F, win = 3000)
positionals(data, beg, end, filter=0)
res = NULL
for (thresh in 1:20 / 2){
res = rbind(res, cbind(thresh, log(rowSums(obj2$va[,obj2$freq > thresh]^2)), log(rowSums(obj2$va[,obj2$freq < thresh]^2))))
}
colnames(res) = c("thresh", "greater", "less")
tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); plot3d(res[,1] , log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]  ,col=ind , size=7)
plot(obj2, mode="pval")
plot(obj2, mode="pval", topthresh = 10)
tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); plot3d(res[,1] , log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]  ,col=ind , size=7)
tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); plot3d(res[,1] , log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]  ,col=ind , size=7)
seq.log(1, 10, 10)
source("C:/Users/zhou/PortableGit/ReadGenea/Junk/helper.R")
seq.log(1, 10, 10)
obj2
print(obj2)
print.stft
ReadGenea::print.stft
diff(obj2$freq)
seq.log(0.2, 10, 10)
seq.log(0.2, 15, 20)
a
b
tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); plot3d(res[,1] , log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]  ,col=ind , size=7)
res = NULL
for (thresh in seq.log(0.2, 15, 20){
res = rbind(res, cbind(log(thresh), log(rowSums(obj2$va[,obj2$freq > thresh]^2)), log(rowSums(obj2$va[,obj2$freq < thresh]^2))))
}
colnames(res) = c("thresh", "greater", "less")
tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); plot3d(res[,1] , log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]  ,col=ind , size=7)
res = NULL
for (thresh in seq.log(0.2, 15, 20)){
res = rbind(res, cbind(log(thresh), log(rowSums(obj2$va[,obj2$freq > thresh]^2)), log(rowSums(obj2$va[,obj2$freq < thresh]^2))))
}
colnames(res) = c("thresh", "greater", "less")
tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); plot3d(res[,1] , log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]  ,col=ind , size=7)
tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); plot3d(res[,1] , log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]  ,col=ind , size=7, alpha = 0.3)
tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); plot3d(res[,1] , log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]  ,col=ind , size=7, alpha = replace(rep(1, length(ind)), which(ind == 1), 0.3))
seq.log(0.2, 15, 20)
seq.log(0.1, 15, 20)
tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); plot3d(res[,1] , log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]  ,col=ind , size=7, alpha = 0.1); for (k in which(ind != 0)
removeZero
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = cbind(res[,1],log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]); plot3d(restmp ,   ,col=ind , size=7, alpha = 0.1) 
 (1: floor(nrow(res) / length(ind)) -1 ) * length(ind)
bundleplot3d <- function( x, ind){
for (ii in which(ind == 2)){
indices = ii + (1: floor(nrow(x) / length(ind)) -1 ) * length(ind)
lines3d(x[indices,], col = ind[ii])
}
}
bundleplot3d(restmp, ind)
 bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 bundleplot3d(restmp, col = ind, alpha = 0.5, lwd = 3)
bundleplot3d <- function( x, ind,...){
for (ii in which(ind == 2)){
indices = ii + (1: floor(nrow(x) / length(ind)) -1 ) * length(ind)
lines3d(x[indices,], col = ind[ii],...)
}
}
 bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = cbind(res[,1],log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]); plot3d(restmp ,   ,col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = cbind(res[,1],log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]); plot3d(restmp ,   ,col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = cbind(res[,1],log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]); plot3d(restmp ,   ,col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = cbind(res[,1],log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]); plot3d(restmp ,   ,col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = cbind(res[,1],log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]); plot3d(restmp ,   ,col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = cbind(res[,1],log(rowSums( exp (res[,2:3]))), c(0,diff(res[,2]))); plot3d(restmp ,   ,col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = cbind(res[,1],log(rowSums( exp (res[,2:3]))), c(0,diff(res[,2]))); plot3d(restmp ,   ,col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = cbind(res[,1],log(rowSums( exp (res[,2:3]))), c(0,diff(res[,2]))); plot3d(restmp ,   ,col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = cbind(res[,1],log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]); plot3d(restmp ,   col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = cbind(res[,1],log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]); plot3d(restmp ,   col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
dim(obj2)
dim(obj2$va)
res2 = NULL
tmp = rep( 0, nrow(obj2$va))
for (thresh in seq.log(0.2, 15, 20)){
res2 = rbind(res2, cbind(log(thresh), (rowSums(obj2$va[,]^2)), log(rowSums(obj2$va[,obj2$freq < thresh]^2) - tmp)))
tmp = rowSums(obj2$va[,obj2$freq < thresh]^2)
}
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = res2; plot3d(restmp ,   ,col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
res2 = NULL
tmp = rep( 0, nrow(obj2$va))
for (thresh in seq.log(0.2, 15, 20)){
res2 = rbind(res2, cbind(log(thresh), log(rowSums(obj2$va[,]^2)), log(rowSums(obj2$va[,obj2$freq < thresh]^2) - tmp) -log(rowSums(obj2$va[,]^2)) ))
tmp = rowSums(obj2$va[,obj2$freq < thresh]^2)
}
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = res2; plot3d(restmp ,   ,col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = res2; plot3d(restmp ,   ,col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = res2; plot3d(restmp ,   ,col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = res2; plot3d(restmp ,   ,col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = res2; plot3d(restmp ,   ,col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = res2; plot3d(restmp ,   ,col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
beg = "7:00"
end = "11:20"
obj2 = stft.mv(data, beg, end, svm = F, win = 3000)
positionals(data, beg, end, filter=0)
positionals(data, beg, end, filter=0)
res2 = NULL
tmp = rep( 0, nrow(obj2$va))
for (thresh in seq.log(0.2, 15, 20)){
res2 = rbind(res2, cbind(log(thresh), log(rowSums(obj2$va[,]^2)), log(rowSums(obj2$va[,obj2$freq < thresh]^2) - tmp) -log(rowSums(obj2$va[,]^2)) ))
tmp = rowSums(obj2$va[,obj2$freq < thresh]^2)
}
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = res2; plot3d(restmp ,   ,col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
ind = rep(1, length(obj2$times))
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = res2; plot3d(restmp ,   ,col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = res2; plot3d(restmp ,   ,col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = res2; plot3d(restmp ,   ,col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = res2; plot3d(restmp ,   ,col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
a
b
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = res2; plot3d(restmp ,   ,col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = res2; plot3d(restmp ,   ,col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
ind
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = res2; plot3d(restmp ,   ,col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = res2; plot3d(restmp ,   ,col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = res2; plot3d(restmp ,   ,col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = res2; plot3d(restmp ,   ,col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
plot(obj2, topthresh = 10, mode="pval")
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = res2; plot3d(restmp ,   ,col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = res2; plot3d(restmp ,   ,col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = res2; plot3d(restmp ,   ,col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = res2; plot3d(restmp ,   ,col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = res2; plot3d(restmp ,   ,col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = res2; plot3d(restmp ,   ,col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
res = NULL
for (thresh in seq.log(0.2, 15, 20)){
res = rbind(res, cbind(log(thresh), log(rowSums(obj2$va[,obj2$freq > thresh]^2)), log(rowSums(obj2$va[,obj2$freq < thresh]^2))))
}
colnames(res) = c("thresh", "greater", "less")
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = cbind(res[,1],log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]); plot3d(restmp ,   ,col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = cbind(res[,1],log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]); plot3d(restmp ,   ,col=ind , size=7, alpha = 0.1) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = cbind(res[,1],log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]); plot3d(restmp ,   ,col=ind , size=7, alpha = 1 - 0.8 * (ind == 1)) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = cbind(res[,1],log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]); plot3d(restmp ,   ,col=ind , size=7, alpha = 1 - 0.8 * (ind == 1)) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = cbind(res[,1],log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]); plot3d(restmp ,   ,col=ind , size=7, alpha = 1 - 0.99 * (ind == 1)) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = cbind(res[,1],log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]); plot3d(restmp ,   ,col=ind , size=7, alpha = 1 - 0.95 * (ind == 1)) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
ind = rep(1, length(obj2$times))
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = cbind(res[,1],log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]); plot3d(restmp ,   ,col=ind , size=7, alpha = 1 - 0.95 * (ind == 1)) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = cbind(res[,1],log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]); plot3d(restmp ,   ,col=ind , size=7, alpha = 1 - 0.95 * (ind == 1)) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = cbind(res[,1],log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]); plot3d(restmp ,   ,col=ind , size=5, alpha = 1 - 0.95 * (ind == 1)) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = cbind(res[,1],log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]); plot3d(restmp ,   ,col=ind , size=5, alpha = 1 - 0.95 * (ind == 1)) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = cbind(res[,1],log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]); plot3d(restmp ,   ,col=ind , size=5, alpha = 1 - 0.95 * (ind == 1)) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = cbind(res[,1],log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]); plot3d(restmp ,   ,col=ind , size=5, alpha = 1 - 0.95 * (ind == 1)) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = cbind(res[,1],log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]); plot3d(restmp ,   ,col=ind , size=5, alpha = 1 - 0.95 * (ind == 1)) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = cbind(res[,1],log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]); plot3d(restmp ,   ,col=ind , size=5, alpha = 1 - 0.95 * (ind == 1)) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = cbind(res[,1],log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]); plot3d(restmp ,   ,col=ind , size=5, alpha = 1 - 0.95 * (ind == 1)) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
ind = rep(1, length(obj2$times))
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = cbind(res[,1],log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]); plot3d(restmp ,   ,col=ind , size=5, alpha = 1 - 0.95 * (ind == 1)) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = cbind(res[,1],log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]); plot3d(restmp ,   ,col=ind , size=5, alpha = 1 - 0.95 * (ind == 1)) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
ind = rep(1, length(obj2$times))
 tmp = locator(2)$x * 60*60*24 ; a = which.max(obj2$times > tmp[1]) ; b = which.max(obj2$times > tmp[2]) ; ind = 1 + 1:length(obj2$times) %bt% c(a,b) + 2*(ind == 2)+ 3*(ind == 3); times2(obj2$times[c(a, b)]); restmp = cbind(res[,1],log(rowSums( exp (res[,2:3]))), res[,2] - res[,3]); plot3d(restmp ,   ,col=ind , size=5, alpha = 1 - 0.95 * (ind == 1)) ; bundleplot3d(restmp, ind, alpha = 0.5, lwd = 3)
dim(restmp)
length(ind)
1039*20
(restmp[rep(ind, 20) == 2,])
restmp2 = (restmp[rep(ind, 20) == 2,])
restmp2[,1] = factor(restmp2[,1])
restmp2[,2]
restmp2[,1:2]
dev.new();plot(restmp2[,1:2])
table(restmp2[,1])
bapply(restmp[,2], length(ind), quantile)
quantile(1:99)
bapply(restmp[,2], length(ind), function(t) quantile(t, c(0.1, 0.9))
)
bapply(restmp[,2], length(ind), function(t) quantile(t, c(0.1, 0.9)))
bapply(restmp[,3], length(ind), function(t) quantile(t, c(0.1, 0.9)))
threshes = bapply(restmp[,3], length(ind), function(t) quantile(t, c(0.1, 0.9)))
plot(threshes[1,])
plot(threshes[1,])
dev.new();plot(restmp2[,c(1,3)])
plot(restmp2[,c(1,3)], type="l")
plot(restmp2[,c(1,3)])
lines(threshes[1,])
lines(threshes[2,])
threshes = bapply(restmp[,3], length(ind), function(t) quantile(t, c(0.1, 0.9)))
length(ind)
threshes = bapply(restmp[,3], length(which(ind == 2)), function(t) quantile(t, c(0.1, 0.9)))
plot(restmp2[,c(1,3)])
lines(threshes[2,])
lines(threshes[1,])
threshes = bapply(restmp2[,3], length(which(ind == 2)), function(t) quantile(t, c(0.1, 0.9)))
lines(threshes[1,])
lines(threshes[2,])
plot(restmp2[,c(1,3)])
lines(threshes[2,])
lines(threshes[1,])
restmp
restmp2
restmp2[,3] < rep(threshes[1,], each = length(which(ind == 2))))
restmp2[,3] < rep(threshes[1,], each = length(which(ind == 2)))
(restmp2[,3] < rep(threshes[1,], each = length(which(ind == 2)))) | (restmp2[,3] > rep(threshes[2,], each = length(which(ind == 2))))
matrix((restmp2[,3] < rep(threshes[1,], each = length(which(ind == 2)))) | (restmp2[,3] > rep(threshes[2,], each = length(which(ind == 2)))), length(which(ind == 2))))
matrix((restmp2[,3] < rep(threshes[1,], each = length(which(ind == 2)))) | (restmp2[,3] > rep(threshes[2,], each = length(which(ind == 2)))), length(which(ind == 2)))
rowSums(matrix((restmp2[,3] < rep(threshes[1,], each = length(which(ind == 2)))) | (restmp2[,3] > rep(threshes[2,], each = length(which(ind == 2)))), length(which(ind == 2))))
plot(rowSums(matrix((restmp2[,3] < rep(threshes[1,], each = length(which(ind == 2)))) | (restmp2[,3] > rep(threshes[2,], each = length(which(ind == 2)))), length(which(ind == 2)))))
max(-restmp2[,3] + rep(threshes[1,], each = length(which(ind == 2))) , restmp2[,3] > rep(threshes[2,], each = length(which(ind == 2)))), length(which(ind == 2))
max(-restmp2[,3] + rep(threshes[1,], each = length(which(ind == 2)) , restmp2[,3] > rep(threshes[2,], each = length(which(ind == 2)))), length(which(ind == 2))
max(-restmp2[,3] + rep(threshes[1,], each = length(which(ind == 2)) , restmp2[,3] - rep(threshes[2,], each = length(which(ind == 2)))), length(which(ind == 2))
)
max(-restmp2[,3] + rep(threshes[1,], each = length(which(ind == 2))) , restmp2[,3] - rep(threshes[2,], each = length(which(ind == 2)))), length(which(ind == 2))
max(-restmp2[,3] + rep(threshes[1,], each = length(which(ind == 2)) , restmp2[,3] - rep(threshes[2,], each = length(which(ind == 2)))), length(which(ind == 2))
)
matrix(max(-restmp2[,3] + rep(threshes[1,], each = length(which(ind == 2)) , restmp2[,3] - rep(threshes[2,], each = length(which(ind == 2))))), length(which(ind == 2))
)
matrix(max(-restmp2[,3] + rep(threshes[1,], each = length(which(ind == 2)) , restmp2[,3] - rep(threshes[2,], each = length(which(ind == 2))), length(which(ind == 2))
)
)
)
matrix(pmax(-restmp2[,3] + rep(threshes[1,], each = length(which(ind == 2)) , restmp2[,3] - rep(threshes[2,], each = length(which(ind == 2))), length(which(ind == 2))
))
)
matrix(pmax(-restmp2[,3] + rep(threshes[1,], each = length(which(ind == 2)) , restmp2[,3] - rep(threshes[2,], each = length(which(ind == 2))), length(which(ind == 2))))
)
pmax(-restmp2[,3] + rep(threshes[1,], each = length(which(ind == 2)) , restmp2[,3] - rep(threshes[2,], each = length(which(ind == 2)))
)
)
pmax(-restmp2[,3] + rep(threshes[1,], each = length(which(ind == 2)) ), restmp2[,3] - rep(threshes[2,], each = length(which(ind == 2)))
)
pmax(-restmp2[,3] + rep(threshes[1,], each = length(which(ind == 2)) ), restmp2[,3] - rep(threshes[2,], each = length(which(ind == 2))))
matrix(pmax(-restmp2[,3] + rep(threshes[1,], each = length(which(ind == 2)) ), restmp2[,3] - rep(threshes[2,], each = length(which(ind == 2)))), length(which(ind == 2))))
matrix(pmax(-restmp2[,3] + rep(threshes[1,], each = length(which(ind == 2)) ), restmp2[,3] - rep(threshes[2,], each = length(which(ind == 2)))), length(which(ind == 2)))
apply(matrix(pmax(-restmp2[,3] + rep(threshes[1,], each = length(which(ind == 2)) ), restmp2[,3] - rep(threshes[2,], each = length(which(ind == 2)))), length(which(ind == 2))),1, max)
plot(apply(matrix(pmax(-restmp2[,3] + rep(threshes[1,], each = length(which(ind == 2)) ), restmp2[,3] - rep(threshes[2,], each = length(which(ind == 2)))), length(which(ind == 2))),1, max))
dim(restmp2)
dim(restmp)
plot(apply(matrix(pmax(-restmp[,3] + rep(threshes[1,], each = length(ind ) ), restmp2[,3] - rep(threshes[2,], each = length(ind))), length(ind),1, max))
)
plot(apply(matrix(pmax(-restmp[,3] + rep(threshes[1,], each = length(ind ) ), restmp2[,3] - rep(threshes[2,], each = length(ind)), length(ind),1, max))
plot(apply(matrix(pmax(-restmp[,3] + rep(threshes[1,], each = length(ind ) ), restmp2[,3] - rep(threshes[2,], each = length(ind))), length(ind)),1, max))
threshes[2,]
length(threshes[2,])
length(threshes[2,]) * length(ind)
plot(apply(matrix(pmax(-restmp[,3] + rep(threshes[1,], each = length(ind ) ), restmp[,3] - rep(threshes[2,], each = length(ind))), length(ind)),1, max))
threshes2 = bapply(restmp2[,2], length(which(ind == 2)), function(t) quantile(t, c(0.1, 0.9)))
threshes2
plot(apply(matrix(pmax(-restmp[,2] + rep(threshes2[1,], each = length(ind ) ), restmp[,2] - rep(threshes2[2,], each = length(ind))), length(ind)),1, max))
plot(apply(matrix(pmax(-restmp[,3] + rep(threshes[1,], each = length(ind ) ), restmp[,3] - rep(threshes[2,], each = length(ind))), length(ind)),1, max))
(apply(matrix(pmax(-restmp[,3] + rep(threshes[1,], each = length(ind ) ), restmp[,3] - rep(threshes[2,], each = length(ind))), length(ind)),1, max) < apply(matrix(pmax(-restmp[,2] + rep(threshes2[1,], each = length(ind ) ), restmp[,2] - rep(threshes2[2,], each = length(ind))), length(ind)),1, max))
plot((apply(matrix(pmax(-restmp[,3] + rep(threshes[1,], each = length(ind ) ), restmp[,3] - rep(threshes[2,], each = length(ind))), length(ind)),1, max) < apply(matrix(pmax(-restmp[,2] + rep(threshes2[1,], each = length(ind ) ), restmp[,2] - rep(threshes2[2,], each = length(ind))), length(ind)),1, max)))
plot((apply(matrix(pmax(-restmp[,3] + rep(threshes[1,], each = length(ind ) ), restmp[,3] - rep(threshes[2,], each = length(ind))), length(ind)),1, max) > apply(matrix(pmax(-restmp[,2] + rep(threshes2[1,], each = length(ind ) ), restmp[,2] - rep(threshes2[2,], each = length(ind))), length(ind)),1, max)))
plot(apply(matrix(pmax(-restmp[,3] + rep(threshes[1,], each = length(ind ) ), restmp[,3] - rep(threshes[2,], each = length(ind))), length(ind)),1, max))
plot(apply(matrix(pmax(-restmp[,2] + rep(threshes2[1,], each = length(ind ) ), restmp[,2] - rep(threshes2[2,], each = length(ind))), length(ind)),1, max))
lines(apply(matrix(pmax(-restmp[,3] + rep(threshes[1,], each = length(ind ) ), restmp[,3] - rep(threshes[2,], each = length(ind))), length(ind)),1, max))
plot(apply(matrix(pmax(-restmp[,2] + rep(threshes2[1,], each = length(ind ) ), restmp[,2] - rep(threshes2[2,], each = length(ind))), length(ind)),1, max))
plot(apply(matrix(pmax(-restmp[,2] + rep(threshes2[1,], each = length(ind ) ), restmp[,2] - rep(threshes2[2,], each = length(ind))), length(ind)),1, max))
plot(apply(matrix(pmax(-restmp[,2] + rep(threshes2[1,], each = length(ind ) ), restmp[,2] - rep(threshes2[2,], each = length(ind))), length(ind)),1, max))
plot(apply(matrix(pmax(-restmp[,3] + rep(threshes[1,], each = length(ind ) ), restmp[,3] - rep(threshes[2,], each = length(ind))), length(ind)),1, max))
plot(apply(matrix(pmax(-restmp[,3] + rep(threshes[1,], each = length(ind ) ), restmp[,3] - rep(threshes[2,], each = length(ind))), length(ind)),1, max) < 1e-1)
tmpsum = cumsum( apply(matrix(pmax(-restmp[,3] + rep(threshes[1,], each = length(ind ) ), restmp[,3] - rep(threshes[2,], each = length(ind))), length(ind)),1, max) )
tmpsum - shift(tmpsum, -10)
plot(tmpsum - shift(tmpsum, -10, fill = "edge"))
plot(tmpsum - shift(tmpsum, -20, fill = "edge"))
plot(tmpsum - shift(tmpsum, -50, fill = "edge"))
( apply(matrix(pmax(-restmp[,3] + rep(threshes[1,], each = length(ind ) ), restmp[,3] - rep(threshes[2,], each = length(ind))), length(ind)),1, max) )
plot(( apply(matrix(pmax(-restmp[,3] + rep(threshes[1,], each = length(ind ) ), restmp[,3] - rep(threshes[2,], each = length(ind))), length(ind)),1, max) ))
plot(( apply(matrix(pmax(-restmp[,3] + rep(threshes[1,], each = length(ind ) ), restmp[,3] - rep(threshes[2,], each = length(ind))), length(ind)),1, max) ) -> tmpt)
FLasso(tmpt, relative.lambdas=0.2)
FLasso(tmpt, lambda = 0.2)
library(Matrix)
FLasso(tmpt, lambda = 0.2)
FLasso(matrix(tmpt, ncol=1), lambda = 0.2)
FLasso(matrix(tmpt, nrows=1), lambda = 0.2)
FLasso(matrix(tmpt, nrow=1), lambda = 0.2)
FLasso(Matrix(tmpt, ncol=1), lambda = 0.2)
FLasso(Matrix(tmpt, nrow=1), lambda = 0.2)
tmpt
FLasso
FLasso(tmpt, lambda = 0.2)
options(error = browser)
FLasso(tmpt, lambda = 0.2)
beta
abs(beta)
ls()
Q
FLasso(tmpt, lambda = 0.2)
0
Q
Matrix(1:2)
debug(FLasso)
FLasso(tmpt, lambda = 0.2)
beta
abs(beta)
Q
FLasso(tmpt, lambda = 0.2)
beta
abs(beta)
rowSums(abs(beta))
Q
Matrix(0, 10)
rowSums(Matrix(0, 10))
rowSums(Matrix(0:1, 10))
rowSums(Matrix(0:1, 2))
FLasso(tmpt, lambda = 0.2)
dim(beta)
dim(abs(beta))
sum(abs(beta))
rowSums(abs(beta))
Q
FLasso(tmpt, lambda = 0.2)
apply(abs(beta), 1, print)
apply(abs(beta), 1, sum)
Q
source("C:/Users/zhou/PortableGit/ReadGenea/ReadGenea/R/FLasso.R")
FLasso(tmpt, lambda = 0.2)
FLasso(tmpt, lambda = 0.1)
plot(FLasso(tmpt, lambda = 0.1))
plot(FLasso(tmpt, lambda = 0.1, mode=))
FLasso
plot(FLasso(tmpt, lambda = 0.1, mode="fit"))
(FLasso(tmpt, lambda = 0.1, mode="fit"))-> tt
which(tt = min(tt))
which(tt == min(tt))
plot(tmpt, col = 1+(tt == min(tt))
)
Q
objsort(0
Q
objsort()
data
Q
history(99999)
data
history(3000)

