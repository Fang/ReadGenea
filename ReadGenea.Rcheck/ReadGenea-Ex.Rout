
R version 2.14.1 (2011-12-22)
Copyright (C) 2011 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: i386-pc-mingw32/i386 (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "ReadGenea"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> library('ReadGenea')
Loading required package: bitops
ReadGenea 2.5 loaded

> 
> assign(".oldSearch", search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("epoch.apply")
> ### * epoch.apply
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: epoch.apply
> ### Title: Compute epochal summary statistics.
> ### Aliases: epoch.apply epoch.mean epoch.sd epoch.median epoch.mad
> ###   epoch.autocor epoch.quantile svm
> ### Keywords: manip
> 
> ### ** Examples
> 
> 
> dat <- read.bin(system.file("binfile/TESTfile.bin", package = "ReadGenea")[1]
+     , calibrate = TRUE)
Number of pages in binary file: 104 
Processing...
================================================================================
Processing took: 0.156 secs .
Loaded 31200 records (Approx  2 MB of RAM)
12-05-23 16:47:50.000 (Wed)  to  12-05-23 16:53:01.990 (Wed) 
> 
> #look for the epochs that exceed a certain threshold 50% of the time
> plot(epoch.apply( dat, epoch.size = 3 , 
+     FUN = function(t) mean(abs(svm(t) -1)>0.2)> 0.5 ), type = "l")
> 
> plot(dat[,1], svm(dat), log = "y", pch = ".")
> lines(epoch.mean(dat, incl.date = TRUE), lwd = 2)
> lines(epoch.mean(dat, epoch.size = 30, incl.date = TRUE), col = 2, lwd = 2)
> #this should give all the same results, but by a different way
> lines(epoch.apply(dat, epoch.size = 30, 
+     FUN = function(A) mean(svm(A, FALSE)), incl.date = TRUE), col = 3)
> epsize = 30; lines(epoch.apply(dat, epoch.size = epsize, 
+     FUN = function(t) median(t[,1])), epoch.apply(dat, epoch.size = epsize, 
+     FUN = function(A) mean(svm(A, FALSE))), col = 4)
> #note this is different
> lines(epoch.apply(dat, epoch.size = epsize, 
+     FUN = function(t) median(t[,1])),epoch.apply(dat, epoch.size = epsize, 
+     FUN = function(A) mean(svm(A, sqrt = TRUE)))^2, col = 5)
> 
> #plot some statistics
> par(mfrow = c(5,1), mar = c(1,4.5,1,1))
> plot(epoch.sd(dat), type="l")
> plot(epoch.median(dat), type= "l")
> plot(epoch.mad(dat), type= "l")
> plot(epoch.autocor(dat), type= "l")
> tmp = epoch.quantile(dat, quantiles= c(0.1, 0.25, 0.5, 0.75, 0.9)); matplot(tmp, type = "l")
> 
> 
> 
> 
> 
> graphics::par(get("par.postscript", pos = 'CheckExEnv'))
> cleanEx()
> nameEx("header.info")
> ### * header.info
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: header.info
> ### Title: Get header info from Genea output (.bin) file
> ### Aliases: header.info
> ### Keywords: manip
> 
> ### ** Examples
> 
> 
> fileheader <- header.info(system.file("binfile/TESTfile.bin", package = "ReadGenea")[1], more = TRUE)
> print(fileheader)
                                            Value
Device_Unique_Serial_Code                  011073
Measurement_Frequency                      100 Hz
Measurement_Period                      168 Hours
Start_Time                0000-00-00 00:00:00:000
Study_Centre                 TESTCenter          
Study_Code                   TESTCode            
Investigator_ID              TESTID              
Exercise_Type                Sample Code         
Device_Location_Code                   left wrist
Subject_Code                 TESTSubject         
Date_of_Birth                            1900-1-1
Sex                                          male
Height                                        160
Weight                                        100
Handedness_Code                             right
Number_of_Pages                               104
> attr(fileheader, "calibration")
$tzone
[1] 1

$xgain
[1] 25344

$xoffset
[1] 1104

$ygain
[1] 25870

$yoffset
[1] 454

$zgain
[1] 25470

$zoffset
[1] -1433

$volts
[1] 300

$lux
[1] 800

$npages
[1] 104

$firstpage
[1] 0

$freq
[1] 100

$t1
[1] 1337791670

$t1c
[1] "2012-05-23 16:47:50 BST"

$inc
[1] 0.01

$t1midnight
[1] 1337731200

$headlines
[1] 59

> 
> 
> 
> cleanEx()
> nameEx("parse.time")
> ### * parse.time
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: reformat.time
> ### Title: Reformats a character time representation to a POSIXct object.
> ### Aliases: reformat.time
> ### Keywords: manip
> 
> ### ** Examples
> 
> 
> #reformat.time("2011:02:11:12:34:02","julian")
> 
> #reformat.time("2010-07-19 13:04:01","POSIX")
> 
> 
> 
> 
> cleanEx()
> nameEx("read.bin")
> ### * read.bin
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: read.bin
> ### Title: File processing function for binary files.
> ### Aliases: read.bin
> ### Keywords: manip
> 
> ### ** Examples
> 
> 
> binfile  = system.file("binfile/TESTfile.bin", package = "ReadGenea")[1]
> 
> #Read in the entire file, calibrated
> procfile<-read.bin(binfile)
Number of pages in binary file: 104 
Processing...
================================================================================
Processing took: 0.125 secs .
Loaded 31200 records (Approx  2 MB of RAM)
12-05-23 16:47:50.000 (Wed)  to  12-05-23 16:53:01.990 (Wed) 
> print(procfile)
ReadGenea dataset:  31200 records at 100 Hz (Approx  2 MB of RAM)
12-05-23 16:47:50.000 (Wed)  to  12-05-23 16:53:01.990 (Wed) 
[ TESTfile.bin ]
> procfile$data.out[1:5,]
         timestamp                  x              y                z light
[1,] 1337791670.00  0.023516414141414 -0.88728256668 -0.1007852375344     0
[2,] 1337791670.01 -0.000157828282828 -1.08828759181 -0.0929328621908     0
[3,] 1337791670.02  0.023516414141414 -1.04190181678 -0.0733019238320     0
[4,] 1337791670.03  0.011679292929293 -1.06509470429 -0.0654495484884     0
[5,] 1337791670.04  0.031407828282828 -1.11148047932 -0.1400471142521     0
     button temperature
[1,]      0        25.8
[2,]      0        25.8
[3,]      0        25.8
[4,]      0        25.8
[5,]      0        25.8
> 
> #Uncalibrated, mmap off
> procfile2<-read.bin(binfile, calibrate = FALSE)
Number of pages in binary file: 104 
Processing...
================================================================================
Processing took: 0.094 secs .
Loaded 31200 records (Approx  2 MB of RAM)
12-05-23 16:47:50.000 (Wed)  to  12-05-23 16:53:01.990 (Wed) 
> procfile2$data.out[1:5,]
         timestamp  x    y   z light button temperature
[1,] 1337791670.00 17 -225 -40     0      0        25.8
[2,] 1337791670.01 11 -277 -38     0      0        25.8
[3,] 1337791670.02 17 -265 -33     0      0        25.8
[4,] 1337791670.03 14 -271 -31     0      0        25.8
[5,] 1337791670.04 19 -283 -50     0      0        25.8
> 
> #Read in again, reusing already computed mmap pagerefs
> procfile3<-read.bin(binfile, pagerefs = procfile2$pagerefs )
Number of pages in binary file: 104 
Processing...
================================================================================
Processing took: 0.125 secs .
Loaded 31200 records (Approx  2 MB of RAM)
12-05-23 16:47:50.000 (Wed)  to  12-05-23 16:53:01.990 (Wed) 
> 
> #Downsample by a factor of 10
> procfilelo<-read.bin(binfile, downsample = 10)
Downsampling to  10  Hz 
Number of pages in binary file: 104 
Processing...
================================================================================
Processing took: 0.078 secs .
Loaded 3120 records (Approx  0 MB of RAM)
12-05-23 16:47:50.000 (Wed)  to  12-05-23 16:53:01.900 (Wed) 
> print(procfilelo)
ReadGenea dataset:  3120 records at 10 Hz (Approx  0 MB of RAM)
12-05-23 16:47:50.000 (Wed)  to  12-05-23 16:53:01.900 (Wed) 
[ TESTfile.bin ]
> object.size(procfilelo) / object.size(procfile)
0.103882662970629 bytes
> 
> #Read in a 1 minute interval
> procfileshort <- read.bin(binfile, start = "16:50", end = "16:51")
Number of pages in binary file: 104 
Processing...
================================================================================
Processing took: 0.016 secs .
Loaded 6600 records (Approx  0 MB of RAM)
12-05-23 16:49:59.000 (Wed)  to  12-05-23 16:51:04.990 (Wed) 
> print(procfileshort)
ReadGenea dataset:  6600 records at 100 Hz (Approx  0 MB of RAM)
12-05-23 16:49:59.000 (Wed)  to  12-05-23 16:51:04.990 (Wed) 
[ TESTfile.bin ]
> 
> ##NOT RUN: Read, and save as a R workspace
> #read.bin(binfile, outfile="tmp.Rdata")
> #print(load("tmp.Rdata"))
> #print(processedfile)
> 
> 
> 
> 
> 
> ### * <FOOTER>
> ###
> cat("Time elapsed: ", proc.time() - get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  1.03 0.09 1.12 NA NA 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
